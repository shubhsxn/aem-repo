<?xml version="1.0" encoding="UTF-8"?>
<!-- | Copyright 2015 Adobe Systems Incorporated | | Licensed under the Apache
	License, Version 2.0 (the "License"); | you may not use this file except
	in compliance with the License. | You may obtain a copy of the License at
	| | http://www.apache.org/licenses/LICENSE-2.0 | | Unless required by applicable
	law or agreed to in writing, software | distributed under the License is
	distributed on an "AS IS" BASIS, | WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied. | See the License for the specific language
	governing permissions and | limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.corteva</groupId>
	<artifactId>corteva</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<description>corteva</description>

	<modules>
		<module>corteva.core</module>
		<module>corteva.model</module>
		<module>corteva.service</module>
		<module>corteva.ui.apps</module>
	</modules>

	<properties>
		<aem.host>localhost</aem.host>
		<aem.port>4502</aem.port>
		<aem.protocol>http</aem.protocol>
		<aem.publish.host>localhost</aem.publish.host>
		<aem.publish.port>4503</aem.publish.port>
		<aem.publish.protocol>http</aem.publish.protocol>
		<sling.user>admin</sling.user>
		<sling.password>admin</sling.password>
		<vault.user>admin</vault.user>
		<vault.userId>admin</vault.userId>
		<vault.password>admin</vault.password>

		<!-- added the below properties for jacoco based code coverage reporting -->

		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>

		<!-- Jacoco output file for UTs -->

		<jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>

		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->

		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

		<!-- Jacoco output file for ITs -->

		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->

		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>

		<!-- added the above properties for jacoco based code coverage reporting -->
	</properties>
	<build>
		<pluginManagement>
			<plugins>
				<!-- Maven Clean Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<!-- Maven Resources Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<!-- Maven Compiler Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.1</version>
				</plugin>
				<!-- Apache Felix SCR Plugin -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-scr-plugin</artifactId>
					<version>1.26.0</version>
					<executions>
						<execution>
							<id>generate-scr-scrdescriptor</id>
							<goals>
								<goal>scr</goal>
							</goals>
							<configuration>
								<!-- Private service properties for all services. -->
								<properties>
									<service.vendor>Adobe</service.vendor>
								</properties>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<outputDirectory>${project.build.directory}/classes</outputDirectory>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-simple</artifactId>
							<version>1.5.11</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- Maven Installer Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<!-- Maven Surefire Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20</version>
				</plugin>
				<!-- Maven Failsafe Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.20</version>
				</plugin>
				<!-- Maven Deploy Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- Apache Sling Plugin -->
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
					<version>2.2.0</version>
					<executions>
						<execution>
							<goals>
								<goal>install</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<slingUrl>${aem.protocol}://${aem.host}:${aem.port}/crx/repository/crx.default</slingUrl>
						<usePut>true</usePut>
						<failOnError>true</failOnError>
					</configuration>
				</plugin>
				<!-- Content Package Plugin -->
				<plugin>
					<groupId>com.day.jcr.vault</groupId>
					<artifactId>content-package-maven-plugin</artifactId>
					<version>0.0.24</version>
					<configuration>
						<targetURL>${aem.protocol}://${aem.host}:${aem.port}/crx/packmgr/service.jsp</targetURL>
						<failOnError>true</failOnError>
						<failOnMissingEmbed>true</failOnMissingEmbed>
					</configuration>
				</plugin>
				<!-- Apache Felix Bundle Plugin -->
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>3.3.0</version>
					<inherited>true</inherited>
				</plugin>
				<!-- Maven Enforcer Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<!-- Maven Dependency Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<!-- Build Helper Maven Plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.2,)
										</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>
												reserve-network-port
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- PMD and Check style -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.9.0</version>
					<configuration>
						<targetJdk>${target-jdk-version}</targetJdk>
						<skip>false</skip>
						<failOnViolation>true</failOnViolation>
						<failurePriority>0</failurePriority>
						<verbose>true</verbose>
						<rulesets>
							<ruleset>${project.parent.basedir}/resources/pmd-rulesets.xml</ruleset>
						</rulesets>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- check style plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<skip>false</skip>
						<consoleOutput>true</consoleOutput>
						<logViolationsToConsole>true</logViolationsToConsole>
						<failOnViolation>true</failOnViolation>
						<violationSeverity>warning</violationSeverity>
						<configLocation>${project.parent.basedir}/resources/checkstyle.xml</configLocation>
						<outputFile>${project.parent.basedir}/codequality/checkstyle-result.xml</outputFile>
						<suppressionsLocation>/resources/checkstyle-suppressions.xml</suppressionsLocation>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Find Bug plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.5</version>
					<configuration>
						<skip>false</skip>
						<!-- Enables analysis which takes more memory but finds more bugs.
							If you run out of memory, changes the value of the effort element to 'Low'. -->
						<effort>Max</effort>
						<!-- Reports all bugs (other values are medium and max) -->
						<threshold>Low</threshold>
						<!-- Produces XML report -->
						<xmlOutput>true</xmlOutput>
						<excludeFilterFile>${project.parent.basedir}/resources/findbug-filter.xml</excludeFilterFile>
						<!-- Configures the directory in which the XML report is created -->
						<findbugsXmlOutputDirectory>${project.parent.basedir}/codequality</findbugsXmlOutputDirectory>
					</configuration>
					<executions>
						<!-- Ensures that FindBugs inspects source code when project is compiled. -->
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Maven Release Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<scmCommentPrefix>[maven-scm] :</scmCommentPrefix>
					<preparationGoals>clean install</preparationGoals>
					<goals>install</goals>
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>
			<!-- Maven Source Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<inherited>true</inherited>
			</plugin>
			<!-- Maven Resources Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- Maven Jar Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<!-- Maven Enforcer Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[2.2.1,)</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<message>Project must be compiled with Java 6 or higher</message>
									<version>1.6.0</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- Maven IntelliJ IDEA Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<jdkLevel>1.8</jdkLevel>
					<linkModules>true</linkModules>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<!-- Maven Eclipse Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
			<!-- PMD and Check style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<targetJdk>${target-jdk-version}</targetJdk>
					<skip>false</skip>
					<failOnViolation>true</failOnViolation>
					<failurePriority>0</failurePriority>
					<verbose>true</verbose>
					<rulesets>
						<ruleset>${project.basedir}/resources/pmd-rulesets.xml</ruleset>
					</rulesets>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- check style plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<skip>false</skip>
					<consoleOutput>true</consoleOutput>
					<logViolationsToConsole>true</logViolationsToConsole>
					<failOnViolation>true</failOnViolation>
					<violationSeverity>warning</violationSeverity>
					<configLocation>${project.basedir}/resources/checkstyle.xml</configLocation>
					<outputFile>${project.basedir}/codequality/checkstyle-result.xml</outputFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Find Bug plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<skip>false</skip>
					<!-- Enables analysis which takes more memory but finds more bugs. If
						you run out of memory, changes the value of the effort element to 'Low'. -->
					<effort>Max</effort>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
					<excludeFilterFile>${project.basedir}/resources/findbug-filter.xml</excludeFilterFile>
					<!-- Configures the directory in which the XML report is created -->
					<findbugsXmlOutputDirectory>${project.basedir}/codequality</findbugsXmlOutputDirectory>
				</configuration>
				<executions>
					<!-- Ensures that FindBugs inspects source code when project is compiled. -->
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<!-- ====================================================== -->
		<!-- SONAR COVERAGE PROFILE -->
		<!-- ====================================================== -->

		<profile>
			<id>sonar-coverage</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>0.7.8</version>
							<executions>
								<execution>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<destFile>${sonar.jacoco.reportPath}</destFile>
								<excludes>
									<!-- exclude ACS Commons imported code -->
									<exclude>com/mb/oneweb/core/*</exclude>
									<exclude>com/mb/onewebcn/core/pojo/*</exclude>
									<exclude>com/mb/onewebcn/core/models/**/*</exclude>
									<!-- exclude vendor classes and temporary utility servlet -->
									<exclude>com/corteva/model/component/models/vendor/*</exclude>
									<exclude>com/corteva/service/servlets/vendor/*</exclude>
								</excludes>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>



		<!-- ====================================================== -->
		<!-- A D O B E P U B L I C P R O F I L E -->
		<!-- ====================================================== -->
		<profile>
			<id>adobe-public</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<properties>
				<releaseRepository-Id>adobe-public-releases</releaseRepository-Id>
				<releaseRepository-Name>Adobe Public Releases</releaseRepository-Name>
				<releaseRepository-URL>https://repo.adobe.com/nexus/content/groups/public</releaseRepository-URL>
			</properties>

			<repositories>
				<repository>
					<id>adobe-public-releases</id>
					<name>Adobe Public Repository</name>
					<url>https://repo.adobe.com/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
						<updatePolicy>never</updatePolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>adobe-public-releases</id>
					<name>Adobe Public Repository</name>
					<url>https://repo.adobe.com/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
						<updatePolicy>never</updatePolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
	</profiles>


	<!-- ====================================================================== -->
	<!-- D E P E N D E N C I E S -->
	<!-- ====================================================================== -->
	<dependencyManagement>
		<dependencies>

			<!-- New Dependencies -->

			<!-- OSGi Dependencies -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.framework</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>biz.aQute</groupId>
				<artifactId>bndlib</artifactId>
				<version>1.50.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- OSGi annotations for DS and metatype -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.component.annotations</artifactId>
				<version>1.3.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.service.metatype.annotations</artifactId>
				<version>1.3.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.annotation</artifactId>
				<version>6.0.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.core</artifactId>
				<version>6.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.cmpn</artifactId>
				<version>6.0.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- Logging Dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.5.11</version>
				<scope>provided</scope>
			</dependency>
			<!-- Apache Sling Dependencies -->
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.models.api</artifactId>
				<version>1.2.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.api</artifactId>
				<version>2.15.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
				<scope>provided</scope>
			</dependency>

			<!-- Jackson -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.7.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.7.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.7.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-xml</artifactId>
				<version>2.7.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>org.codehaus.woodstox</groupId>
			    <artifactId>stax2-api</artifactId>
			    <version>4.0.0</version>
			    <scope>provided</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-jaxb-annotations -->
			<dependency>
			    <groupId>com.fasterxml.jackson.module</groupId>
			    <artifactId>jackson-module-jaxb-annotations</artifactId>
			    <version>2.7.4</version>
			    <scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.1.1</version>
				<scope>provided</scope>
			</dependency>

			<!-- Servlet API -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.1</version>
				<scope>provided</scope>
			</dependency>
			<!-- JCR -->
			<dependency>
				<groupId>javax.jcr</groupId>
				<artifactId>jcr</artifactId>
				<version>2.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- Commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>2.0.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- AEM APIs; make sure to not move this bundle upper in the list so
				that newer APIs available in AEM but not in the Uber Jar can be used as dependencies. -->

			<dependency>
				<groupId>com.adobe.aem</groupId>
				<artifactId>uber-jar</artifactId>
				<version>6.3.0</version>
				<classifier>apis</classifier>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.adobe.cq</groupId>
				<artifactId>core.wcm.components.all</artifactId>
				<type>zip</type>
				<version>1.0.6</version>
			</dependency>
			<!-- Testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>1.5.11</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.7.22</version>
			</dependency>
			<dependency>
				<groupId>io.wcm</groupId>
				<artifactId>io.wcm.testing.aem-mock</artifactId>
				<version>2.2.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-atinject_1.0_spec</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>


			<!-- End: New Dependencies -->

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr</artifactId>
				<version>1.6.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr.annotations</artifactId>
				<version>1.9.6</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>4.2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>4.2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.adobe.aem</groupId>
				<artifactId>aem-api</artifactId>
				<version>6.0.0.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.3</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.day.cq.wcm</groupId>
				<artifactId>cq-wcm-taglib</artifactId>
				<version>5.7.4</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.19</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.20.0-GA</version>
			</dependency>
			<dependency>
				<groupId>junit-addons</groupId>
				<artifactId>junit-addons</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.17</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.9</version>
			</dependency>
			<dependency>
				<groupId>io.wcm</groupId>
				<artifactId>io.wcm.testing.aem-mock</artifactId>
				<version>2.2.12</version>
			</dependency>
			<dependency>
				<groupId>org.apache.sling</groupId>
				<artifactId>org.apache.sling.testing.sling-mock-oak</artifactId>
				<version>2.0.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.adobe.acs</groupId>
				<artifactId>acs-aem-commons-bundle</artifactId>
				<version>2.1.0</version>
			</dependency>
			<dependency>
				<groupId>com.openpojo</groupId>
				<artifactId>openpojo</artifactId>
				<version>0.8.10</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>1.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>commons-httpclient</groupId>
			    <artifactId>commons-httpclient</artifactId>
			    <version>3.1</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>1.5</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
