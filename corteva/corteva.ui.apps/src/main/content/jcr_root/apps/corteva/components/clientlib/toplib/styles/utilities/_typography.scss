/**
 Vertical Rhythm properties
*/
$base-font-size: 16px;
$base-line-height: 24px;
$font-unit: 1rem;
$relative-font-sizing: false;
$round-to-nearest-half-line: false;

/**
 Type sizes and line-heights
*/
$type-scale: (
    peta: (
        size: 104,
        height: 112
    ),
    tera: (
        size: 72,
        height: 83
    ),
    omni: (
        size: 42,
        height: 63
    ),
    giga: (
        size: 32,
        height: 48
    ),
    omega: (
        size: 28,
        height: 34
    ),
    mega: (
        size: 26,
        height: 32
    ),
    kilo: (
        size: 24,
        height: 30
    ),
    alpha: (
        size: 20,
        height: 28
    ),
    beta: (
        size: 18,
        height: 26
    ),
    gamma: (
        size: 16,
        height: 22
    ),
    delta: (
        size: 14,
        height: 20
    ),
    epsilon: (
        size: 13,
        height: 18
    ),
    zeta: (
        size: 12,
        height: 18
    ),
    micro: (
        size: 11,
        height: 18
    ),
    milli: (
        size: 10,
        height: 18
    ),
    mini: (
        size: 9,
        height: 18
    ),
    nano: (
        size: 6,
        height: 14
    )
);


/**
 Function for getting font-size from type-scale
 @param {String} $font-type Name of font type to retrieve (header || content)
 @param {String} $variant Font variant to retrieve (regular, italic, bold, etc)
 TODO: use the values defined above across all components.
*/
@function get-type-family($variant: 'primary') {
    @return map-get($font-heading, $variant);
}

/**
 Function for getting font-size from type-scale
 @param {String} $font-size Name of font size to retrieve
*/
@function get-type-size($font-size) {
    $converted-size: px-to-rem(map-deep-get($type-scale, $font-size, size));

    //get the $type-scale font size and set the vertical rhythm
    @return $converted-size;
}

/**
 Function for getting font-size from type-scale - in px
 @param {String} $font-size Name of font size to retrieve
*/
@function get-type-size-px($font-size) {
    $converted-size: px-size(map-deep-get($type-scale, $font-size, size));

    //get the $type-scale font size - in px and set the vertical rhythm
    @return $converted-size;
}

/**
 Function for getting line-height from type-scale
 @param {String} $font-size Name of font size to retrieve
*/
@function get-type-height($font-size) {
    $converted-size: px-to-rem(map-deep-get($type-scale, $font-size, height));

    //get the $type-scale font size and set the vertical rhythm
    @return $converted-size;
}

/**
 Function for getting line-height from type-scale - in px
 @param {String} $font-size Name of font size to retrieve
*/
@function get-type-height-px($font-size) {
    $converted-size: px-size(map-deep-get($type-scale, $font-size, height));
    //get the $type-scale font size in px and set the vertical rhythm
    @return $converted-size;
}

/**
 Mixin for setting the font-size and line-height from type-scale
 @param {String} $font-size Name of font size to set
*/
@mixin set-type-size($font-size) {
    font-size: get-type-size($font-size);
    line-height: get-type-height($font-size);
}

/**
 Mixin for setting the font-size and line-height from type-scale
 @param {String} $font-size Name of font size to set
*/
@mixin set-type-family($variant: 'primary') {
    font-family: get-type-family($variant);
}

/**
 Mixin for setting the font styles for a heading element
 @param {String} $font-size Name of font size to set
 @param {String} $variant Optional font style variant (accepts: regular, bold, black)
*/
@mixin type-heading($font-size: 'giga', $font-heading: 'primary', $type-color: 'default') {
    //get the font heading variant property
    @include set-type-family($font-heading);
    @include set-type-size($font-size);
    @if($type-color != 'none') {
        color: get-type-color($type-color);
    }
}

/**
 Mixin for setting the font styles for a content element
 @param {String} $font-size Name of font size to set
 @param {String} $variant Optional font style variant (accepts: light, medium, bold)
*/
@mixin type-content($font-size: 'gamma', $variant: 'regular', $type-color: 'default') {
    //get the font heading variant property
    @include type-variant($variant);
    @include set-type-size($font-size);
    @if($type-color != 'none') {
        color: get-type-color($type-color);
    }
}

/**
 Mixin for setting the font variant for a content element
 @param {String} $variant Optional font style variant (accepts: light, medium, bold)
*/
@mixin type-variant($variant: 'regular') {
    font-family: map-get($font-variant, $variant);
}


h1 {
  @include fluid-type(40px, $heading-xl);
  @include fluid-line-height(42px, 60px);
}

h2 {
  @include fluid-type(24px, $heading-l);
  @include fluid-line-height(28px, 54px);
}

h3 {
  @include fluid-type(24px, $heading-m);
  @include fluid-line-height(28px, 36px);
}

h4 {
  @include fluid-type(20px, $heading-s);
  @include fluid-line-height(24px, 30px);

}

h5 {
  @include fluid-type(18px, $font-xl);
  @include fluid-line-height(24px, 26px);
}

h6 {
  @include fluid-type($base-font, $font-l);
  @include fluid-line-height(22px, 24px);
}

h1, h2, h3, h4, h5, h6 {
  font-family: $brand-font;
  font-weight: 700;
  margin: 0;
}

p {
  font-size: $base-font;
  @include fluid-line-height(28px, 30px);
  font-family: $body-font;
  color: $foundation-primary;
  margin-top: 0;
  margin-bottom: 0;
}


html:lang(gr) {
    $brand-font:  "Arial Black";
    body {
      font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    p {
      font-size: $base-font;
      @include fluid-line-height(28px, 30px);
      font-family: $body-font;
      margin-top: 0;
      margin-bottom: 0;
    }
    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

html:lang(ko) {
    $brand-font: "Noto Sans KR";
    body {
      font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    p {
      font-size: $base-font;
      @include fluid-line-height(28px, 30px);
      font-family: $brand-font;
      margin-top: 0;
      margin-bottom: 0;
    }

    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

html:lang(cn){
    $brand-font: "Apple Ligothic Medium", "Microsoft Jheng Hai Bold";
    $body-font: "Apple Ligothic", "Microsot Jheng Hai";
    body {
      font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    p {
      font-size: $font-l;
      @include fluid-line-height(28px, 30px);
      font-family: $body-font;
      margin-top: 0;
      margin-bottom: 0;
    }
    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

html:lang(zh){
  $brand-font: "Noto Sans CJK SC";
  body {
    font-family: $brand-font;
  }
  body {
    font-family: $brand-font;
  }
  h1, h2, h3, h4, h5, h6 {
    font-family: $brand-font;
    font-weight: 700;
    margin: 0;
  }
  p {
    font-size: $font-l;
    @include fluid-line-height(28px, 30px);
    font-family: $brand-font;
    margin-top: 0;
    margin-bottom: 0;
  }
  a,
  a.c-button, 
  .c-button,
  span,
  strong,
  span.title,
  input[type='submit'],
  input[type='search'] {
    font-family: $brand-font !important;
  }
}

html:lang(ja){
    $brand-font: "Noto Sans JP";
    body{
      font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    .det16-rich-text-field{
        h1, h2, h3, h4, h5, h6 {
            margin: 0 0 1em;
        }
    }
    p {
      font-size: $base-font;
      @include fluid-line-height(28px, 30px);
      font-family: $brand-font;
      margin-top: 0;
      margin-bottom: 0;
    }
    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

html:lang(vn){
    $brand-font: "Noto Sans";
    body {
      $font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    p {
      font-size: $base-font;
      @include fluid-line-height(28px, 30px);
      font-family: $brand-font;
      margin-top: 0;
      margin-bottom: 0;
    }
    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

html:lang(th){
    $brand-font: "Kanit";
    body {
      $font-family: $brand-font;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: $brand-font;
      font-weight: 700;
      margin: 0;
    }
    p {
      font-size: $base-font;
      @include fluid-line-height(28px, 30px);
      font-family: $brand-font;
      margin-top: 0;
      margin-bottom: 0;
    }
    a,
    a.c-button, 
    .c-button,
    span,
    strong,
    span.title,
    input[type='submit'],
    input[type='search'] {
      font-family: $brand-font !important;
    }
}

/* CSS BUCKETS IMPLEMENTATION
CSS 2 â€“ Cyrillic Characters Plus:  Cyrillic characters, and the characters for Vietnamese, are wider than traditional Latin-based characters.  That means that we either need to tell the content authors to use less characters or we have to find a way to make more characters fit in the same amount of space.  There is concern that the content authors will not be able to convey the intended message if we limit the character count.  Thus, the current recommendation is to shrink the font size and line spacing by 10% so that the character count will be the same as it is for Latin-Characters.
SS 3 â€“ Decorative Characters:  This includes Japanese, Chinese, and Korean.  The accepted default font size for these characters is at minimum 14pt (instead of the Latin Character 12pt) due to the intricacies of the characters.  The author will also use significantly less characters to say what they need to say, so it makes sense to have them be larger.  This is not just for aesthetics, but also for readability.

*/

html:lang(gr), html:lang(ru), html:lang(vn) {
  h1 {
    @include fluid-type(36px, 50px);
    @include fluid-line-height(36px, 45px);
  }
  h2 {
    @include fluid-type(28px, 40px);
    @include fluid-line-height(35px, 49px);
  }
  h3 {
    @include fluid-type(22px, 29px);
    @include fluid-line-height(26px, 32px);
  }

  h4 {
    @include fluid-type(18px, 20px);
    @include fluid-line-height(22px, 26px);
  }
  h5 {
    @include fluid-type(16px, 18px);
    @include fluid-line-height(24px, 20px);
  }
}
